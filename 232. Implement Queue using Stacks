class MyQueue {

    Stack<Integer> stack = new Stack<>();
    public MyQueue() {
        
    }
    
    public void push(int x) {
        stack.push(x);
    }
    
    public int pop() {
        List<Integer> list = new ArrayList<>();
        Stack<Integer> stack2 = new Stack<>();
        if(!stack.isEmpty()){
            for(int i =stack.size()-1; i>=0; i--)
            {
                int j = stack.pop();
                list.add(j);
                stack2.push(j);
            }
            list.remove(list.size()-1);
            int i = list.size()-1;
            while(i>=0)
            {
                stack.push(list.get(i));
                i--;
            }
        }
        if(stack2.isEmpty()) return 0;
        return stack2.pop();
    }
    
    public int peek() {
        List<Integer> list = new ArrayList<>();
        Stack<Integer> stack2 = new Stack<>();
        if(!stack.isEmpty()){
            for(int i =stack.size()-1; i>=0; i--)
            {
                int j = stack.pop();
                list.add(j);
                stack2.push(j);
            }
            int i = list.size()-1;
            while(i>=0)
            {
                stack.push(list.get(i));
                i--;
            }
        }
        if(stack2.isEmpty()) return 0;
        return stack2.peek();
    }
    
    public boolean empty() {
        if(stack.isEmpty()){
            return true;
        }
        return false;
    }
}
